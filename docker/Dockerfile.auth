# Multi-stage build
FROM node:18-alpine AS base

# Instalar dependencias del sistema
RUN apk add --no-cache \
    dumb-init \
    curl \
    && rm -rf /var/cache/apk/*

# Crear usuario no-root
RUN addgroup -g 1001 -S nodejs
RUN adduser -S authservice -u 1001

# Establecer directorio de trabajo
WORKDIR /app

# Copiar archivos de configuración
COPY auth-service/package*.json ./
COPY auth-service/tsconfig.json ./

# Stage de dependencias
FROM base AS deps

# Instalar dependencias
RUN npm ci --only=production && npm cache clean --force

# Stage de build
FROM base AS build

# Copiar dependencias de desarrollo
RUN npm ci

# Copiar código fuente
COPY auth-service/src ./src
COPY auth-service/index.ts ./

# Compilar TypeScript
RUN npm run build

# Stage de producción
FROM base AS runtime

# Copiar dependencias de producción
COPY --from=deps /app/node_modules ./node_modules

# Copiar código compilado
COPY --from=build /app/dist ./dist
COPY --from=build /app/package.json ./

# Crear directorio para logs
RUN mkdir -p /app/logs && chown -R authservice:nodejs /app

# Cambiar a usuario no-root
USER authservice

# Exponer puerto
EXPOSE 3002

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3002/auth/health || exit 1

# Comando de inicio
ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "dist/index.js"]